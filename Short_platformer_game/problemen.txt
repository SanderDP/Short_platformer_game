- Om een levelmap te maken maak ik gebruik van Tiled; een programma om tilesets te gebruiken om maps te maken en nog meer opties...
	Tiled 1.9 heeft "classes" ipv "types" en fxgl is gemaakt met "types" te zoeken in de files. 1.0.1 geinstalleerd en map hierop gemaakt
	1.0.1 was niet meer gesupport => 1.4.2 geinstalleerd

- FXGL.getGameWorld().setLevel(FXGL.setLevelFromMap("tmx/platformer.tmx")); moest gewoon FXGL.setLevelFromMap("tmx/platformer.tmx") zijn

- UINode only accepts node but I want to add container with 3 nodes in it
   oplossing: gewoon 1 voor 1 toegevoegd

- met gamevars dat intigers zijn niet .add(amount) of .subtract(amount) doen maar functie inc(variabele, +/-amount) [increment]

- Ui compatible maken met vars.put("Lives", 3); => de Ui moet aantal harten tonen naargelang van dit nummer
    probleem: getGameScene().getUINodes().set(getWorldProperties().intProperty("Lives").get(), getAssetLoader().loadTexture("Items/Other/Heart Empty (64x64).png")); werkt niet
    reden: Abstractlist.set(int index, Node node) is niet gesupport en getGameScene.getUINodes() is een Abstractlist => UnsupportedOperationException

    oplossing 1: delete oude node en dan add de juiste nodes
        probleem: getGameScene().removeUINode(Node node) is de enige optie om een node te verwijderen
        uitleg probleem: getGamescene() heeft enkel .getUINodes() functie en geen om 1 enkele node op te vragen
        globale Arraylist<Node> lives toegevoegd waarin ik de nodes opsla en deze gebruik om de translateX data op te vragen, te geven aan nieuwe node en dan oude node te verwijderen

    oplossing 2: gebruik getGamescene().getUINodes().get() ipv globale Arraylist<Node> lives
        deze oplossing realiseerde ik toen ik het vorige probleem probeerde uit te schrijven
        code herkeken en gezien dat de getUINodes de functio .get() had om een bestaande node op te vragen
            BELANGRIJK: de volgorde waarin de nodes worden toegevoegd in initUI is van groot belang als we deze later opvragen volgens index hun index

   nieuw probleem:
        samengevat: met een list werken waarbij men enkel op het einde kan toevoegen of specifieke nodes verwijderen is moeilijk als je ook op die specifieke plaats iets anders wilt zetten
        bij het proberen toevoegen van een full heart als player 100 fruit collect was de wiskunde te moeilijk om met de getGamescene.getUINodes() te werken
        want deze voegt enkel uinodes toe aan het einde van de list => het vinden van een specifieke node en deze vervangen is enorm moeilijk bij het abnormaal toevoegen en verwijderen van levens

   => back to solution 1:
      globale list met alle UINodes gebruiken
      hierop kan ik set(index, node) wel gebruiken
      Code:
        - geef locatie van oude node door aan vervangende node
        - add nieuwe node aan globale list
        - remove alle nodes van Gamescene met .clearUINodes();
        - plaats alle nodes van globale list in gameScene;

- minigame:
    de fxgl library heeft een ingebouwde minigames gedeelte met enkele voorgeprogrammeerde minigames => gewoon oproepen met minigameService().start[minigameName]([vars]);
     -> ik maak gebruik van de "CircuitBreaker" minigame

     probleem:
        deze minigame is al voorgeprogrammeerd maar de class die de controls insteld is final en ik wil andere controls instellen

        oplossing:
            maak CustomControlCircuitBreakerView waarin ik de code van deze final class in over neem en het gedeelte waarbij de controls worden ingesteld aanpas

            probleem: deze class is in kotlin geschreven
            oplossing: vertaal van Kotlin -> Java

- enemy AI
    dacht dat ik geen groundsensor kon gebruiken want moet checken aan beide kanten (kan maar 1 groundsesor aan een entity koppelen)
        => maken van lists in mushroomcomponent en collisionhandlers om groundsensor te recreÃ«ren en deze 2 maal gebruiken

    ONTDEKKING:
        de "scale" parameter van een entity kan op -1 gezet worden om gans de entity te mirroren, niet enkel de sprites
            => groundsensor gebruikt om te checken of er ground is in de volgende tile